/**
 * theme-aware - Change color of a css property based on the currently active theme
 *
 * @param  {key}     CSS property
 * @param  {color}   Color name defined in the themes under _color-palette.scss
 *
 * @example - @include theme-aware('background', 'color-background');
 * @returns - background: #FFF;
 */
@mixin theme-aware($key, $color) {
	@each $theme-name, $theme-color in $themes {
		.theme-#{$theme-name} & {
			#{$key}: map-get(map-get($themes, $theme-name), $color);
		}
	}
}

@mixin theme-aware-navLogic($key, $color) {
	@each $theme-name, $theme-color in $themes {
		.theme-#{$theme-name} & {
			#{$key}: linear-gradient(
				120deg,
				transparent 0%,
				transparent 50%,
				map-get(map-get($themes, $theme-name), $color) 50%
			);
		}
	}
}

@mixin theme-aware-neoMorph($key, $color1, $color2) {
	@each $theme-name, $theme-color in $themes {
		.theme-#{$theme-name} & {
			#{$key}: 10px 10px 30px map-get(map-get($themes, $theme-name), $color1),
				-10px -10px 30px map-get(map-get($themes, $theme-name), $color2);
		}
	}
}
