{"version":3,"sources":["component/logo.js","component/NavigationItems.js","component/Header.js","component/ImageCard.js","view/Home.js","view/Portrait.js","view/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Logo","href","className","Component","navItems","props","state","menus","key","text","type","id","htmlFor","this","map","menuItem","toolbar","ImageCard","card","src","cardItem","alt","homePage","Portrait","App","component","HomePage","exact","path","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mPAWeA,E,uKAPP,OACA,uBAAGC,KAAK,4BAA4BC,UAAU,aAC1C,2CAAgB,2C,GAJTC,aCiCJC,E,kDAhCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,CACH,CAACC,IAAK,WAAYC,KAAM,YACxB,CAACD,IAAK,eAAgBC,KAAM,gBAC5B,CAACD,IAAK,SAAUC,KAAM,WACtB,CAACD,IAAK,QAASC,KAAM,SACrB,CAACD,IAAK,QAASC,KAAM,WARd,E,qDAaf,OACI,yBAAKP,UAAU,cACX,2BAAOQ,KAAK,WAAWR,UAAU,uBAAuBS,GAAG,gBAC3D,2BAAOC,QAAQ,cAAcV,UAAU,sBACnC,0BAAMA,UAAU,oBAAhB,SAEJ,yBAAKA,UAAU,0BAAf,QACA,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,oBACTW,KAAKP,MAAMC,MAAMO,KAAI,SAAAC,GAClB,OAAO,wBAAIb,UAAU,mBAAmBM,IAAKO,EAASP,KAAK,uBAAGP,KAAI,WAAMc,EAASP,KAAON,UAAU,oBAAoBa,EAASN,iB,GAxBpIN,aCQRa,EAPC,SAACX,GAAD,OACZ,gCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OC2BOY,E,kDA9BX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTY,KAAM,CACF,CAACV,IAAK,EAAGW,IAAK,iPACd,CAACX,IAAK,EAAGW,IAAK,kPACd,CAACX,IAAK,EAAGW,IAAK,mPANP,E,qDAWf,OACI,yBAAKjB,UAAU,OACdW,KAAKP,MAAMY,KAAKJ,KAAI,SAAAM,GACjB,OACI,uBAAGlB,UAAU,YAAYD,KAAK,KAAKO,IAAKY,EAASZ,KAC7C,yBAAKN,UAAU,cACX,yBAAKiB,IAAKC,EAASD,IAAKE,IAAI,YAEhC,yBAAKnB,UAAU,gBACX,kD,GArBJC,aCOTmB,EANE,SAACjB,GAAD,OACb,yBAAKH,UAAU,WACX,kBAAC,EAAD,QCWOqB,E,kDAbX,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAMf,OACI,yBAAKJ,UAAU,gB,GARJC,aCMRmB,EANE,SAACjB,GAAD,OACb,yBAAKH,UAAU,WACX,qD,MCiBOsB,MAbf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWC,EAAUC,OAAK,EAACC,KAAK,MACvC,kBAAC,IAAD,CAAOH,UAAWF,EAAUK,KAAK,cACjC,kBAAC,IAAD,CAAOH,UAAWI,OCHNC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGNC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.60a877a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Logo extends Component {\r\n    render() {\r\n        return (\r\n        <a href=\"https://surfacepenart.com\" className=\"left_area\">\r\n            <h3>Surface Pen <span>Art</span></h3>\r\n        </a>);\r\n    }\r\n}\r\n\r\nexport default Logo;","import React, { Component } from 'react';\r\n\r\nclass navItems extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menus: [\r\n                {key: \"portrait\", text: \"Portrait\"},\r\n                {key: \"illustration\", text: \"Illustration\"},\r\n                {key: \"fanart\", text: \"Fan Art\"},\r\n                {key: \"blogs\", text: \"Blogs\"},\r\n                {key: \"about\", text: \"About\"}\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"navigation\">\r\n                <input type=\"checkbox\" className=\"navigation--checkbox\" id=\"navi-toggle\"/>\r\n                <label htmlFor=\"navi-toggle\" className=\"navigation--button\">\r\n                    <span className=\"navigation--icon\">&nbsp;</span>\r\n                </label>\r\n                <div className=\"navigation--background\">&nbsp;</div>\r\n                <nav className=\"navigation--nav\">\r\n                    <ul className=\"navigation--list\">\r\n                        {this.state.menus.map(menuItem => {\r\n                            return <li className=\"navigation--item\" key={menuItem.key}><a href={`/${menuItem.key}`} className=\"navigation--link\">{menuItem.text}</a></li>\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default navItems;","import React from 'react';\r\nimport Logo from './logo';\r\nimport NavItems from './NavigationItems';\r\nconst toolbar = (props) => (\r\n    <header>\r\n        <Logo />\r\n        <NavItems/>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            card: [\r\n                {key: 1, src: \"https://instagram.fblr15-1.fna.fbcdn.net/v/t51.2885-15/e35/37114996_246262402656964_5198835526991347712_n.jpg?_nc_ht=instagram.fblr15-1.fna.fbcdn.net&_nc_cat=104&_nc_ohc=UXnq1YjASKEAX-ntY1L&oh=6277b1c2368547e4d575936c455489d0&oe=5ED994EC\"},\r\n                {key: 2, src: \"https://instagram.fblr15-1.fna.fbcdn.net/v/t51.2885-15/e35/44693745_2110313659046542_1622778457978602629_n.jpg?_nc_ht=instagram.fblr15-1.fna.fbcdn.net&_nc_cat=110&_nc_ohc=fI4VGWzu2qEAX-x5tvq&oh=c4508be11e7e215dcd5dc0cc54c01f72&oe=5EDB251F\"},\r\n                {key: 3, src: \"https://instagram.fblr15-1.fna.fbcdn.net/v/t51.2885-15/e35/43985768_290613748248720_5285069821962207839_n.jpg?_nc_ht=instagram.fblr15-1.fna.fbcdn.net&_nc_cat=100&_nc_ohc=QFzbgDa4GhwAX9dHuz2&oh=984ae467bd5edf2c18ce395ed7949700&oe=5EDA3D3F\"}\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n            {this.state.card.map(cardItem => {\r\n                return (\r\n                    <a className=\"box--card\" href=\"/#\" key={cardItem.key}>\r\n                        <div className=\"box--imgBx\">\r\n                            <img src={cardItem.src} alt=\"images\"/>\r\n                        </div>\r\n                        <div className=\"box--details\">\r\n                            <h2>Portrait</h2>\r\n                        </div>\r\n                    </a>\r\n                )\r\n            })}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport ImageCard from '../component/ImageCard';\r\n\r\nconst homePage = (props) => (\r\n    <div className=\"content\">\r\n        <ImageCard />\r\n    </div>\r\n);\r\n\r\nexport default homePage;","import React, { Component } from 'react';\r\n\r\nclass Portrait extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portrait;","import React from 'react';\r\n\r\nconst homePage = (props) => (\r\n    <div className=\"content\">\r\n        <h3>404: Page Not Found</h3>\r\n    </div>\r\n);\r\n\r\nexport default homePage;","import React from 'react';\nimport Toolbar from './component/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './view/Home';\nimport Portrait from './view/Portrait';\nimport NotFound from './view/NotFound';\nimport './css/style.css'\n\nfunction App() {\n  return (\n    <div>\n      <Toolbar/>\n      <Switch>\n        <Route component={HomePage} exact path=\"/\"/>\n        <Route component={Portrait} path=\"/portrait\"/>\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}